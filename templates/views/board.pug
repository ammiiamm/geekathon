extends ../layouts/default

block intro
  .container
    - var startDate = new Date().toISOString().slice(0, 10)
    - var endDateTime = new Date()
    - endDateTime.setDate(endDateTime.getDate() + 1)
    - var endDate = endDateTime.toISOString().slice(0, 10)

    - console.log(countPositive)
    - var calPositive = countPositive 
    - var calNeutral = countNeutral 
    - var calNegative = countNegative 


    h2 Daily Dashboard
    p Thai News published on #{startDate}
block content
  .container
    .row
      .col-sm-3
        .panel.panel-primary
          .panel-heading Today's News
          .panel-body
            h2 #{countAll}
      .col-sm-3
        .panel.panel-success
          .panel-heading %Today's Positive
          .panel-body
            h2 #{calPositive}%
      .col-sm-3
        .panel.panel-warning
          .panel-heading %Today's Neutral
          .panel-body
            h2 #{calNeutral}%
      .col-sm-3
        .panel.panel-danger
          .panel-heading %Today's Negative
          .panel-body
            h2 #{calNegative}%
      br

    .row
      .col-sm-6
        .panel.panel-default
          .panel-heading The summary of today's news by categories
          .panel-body 
            center
              svg#svg1(width='400', height='400', viewbox='0 0 400 400', preserveaspectratio='xMidYMid meet')
      .col-sm-6
        .panel.panel-default
          .panel-heading The summary of today's news by source
          .panel-body
            center
              svg#svg(width='450', height='400', viewbox='0 0 450 400', preserveaspectratio='xMidYMid meet')  

  script(src='http://d3js.org/d3.v4.min.js', charset='utf-8')

  script.
    //- var data4=[
    //-   {"category":"Finance",Neutral:47,Negative:42,Positive:52}
    //-   ,{"category":"Property",Neutral:24,Negative:5,Positive:24}
    //-   ,{"category":"Economy",Neutral:12,Positive:37,Negative:28}
    //-   ,{"category":"Business",Negative:13,Neutral:30,Positive:39}
    //- ];

    d3.json("http://sentifine.me:3001/api/finnewbysource", function(data) {

      var series = d3.stack()
          .keys(["Negative", "Neutral", "Positive"])
          .offset(d3.stackOffsetDiverging)
          (data);

      var svg = d3.select("#svg"),
          margin = {top: 20, right: 30, bottom: 30, left: 60},
          width = +svg.attr("width"),
          height = +svg.attr("height");

      var x = d3.scaleBand()
          .domain(data.map(function(d) { return d.source; }))
          .rangeRound([margin.left, width - margin.right])
          .padding(0.1);

      var y = d3.scaleLinear()
          .domain([d3.min(series, stackMin), d3.max(series, stackMax)])
          .rangeRound([height - margin.bottom, margin.top]);

      var z = d3.scaleOrdinal(d3.schemeCategory10);

      var colors = ["#e51c23", "#ff9800", "#4caf50"]
      
      svg.append("g")
        .selectAll("g")
        .data(series)
        .enter().append("g")
          .attr("fill", function(d) { return z(d.key); })
          .style("fill", function(d,i) { return colors[i];})
        .selectAll("rect")
        .data(function(d) { return d; })
        .enter().append("rect")
          .attr("width", x.bandwidth)
          .attr("x", function(d) { return x(d.data.source); })
          .attr("y", function(d) { return y(d[1]); })
          .attr("height", function(d) { return y(d[0]) - y(d[1]); })
      console.log(svg)
      svg.append("g")
          .attr("transform", "translate(0," + y(0) + ")")
          .call(d3.axisBottom(x));

      svg.append("g")
          .attr("transform", "translate(" + margin.left + ",0)")
          .call(d3.axisLeft(y));
          

      function stackMin(serie) {
        return d3.min(serie, function(d) { return d[0]; });
      }

      function stackMax(serie) {
        return d3.max(serie, function(d) { return d[1]; });
      }
    });
  
  
  script.
    //- var data4=[
    //-   {"category":"Finance",Neutral:47,Negative:42,Positive:52}
    //-   ,{"category":"Property",Neutral:24,Negative:5,Positive:24}
    //-   ,{"category":"Economy",Neutral:12,Positive:37,Negative:28}
    //-   ,{"category":"Business",Negative:13,Neutral:30,Positive:39}
    //- ];

    d3.json("http://sentifine.me:3001/api/finnewbycat", function(data) {

      var series = d3.stack()
          .keys(["Negative", "Neutral", "Positive"])
          .offset(d3.stackOffsetDiverging)
          (data);

      var svg = d3.select("#svg1"),
          margin = {top: 20, right: 30, bottom: 30, left: 60},
          width = +svg.attr("width"),
          height = +svg.attr("height");

      var x = d3.scaleBand()
          .domain(data.map(function(d) { return d.category; }))
          .rangeRound([margin.left, width - margin.right])
          .padding(0.1);

      var y = d3.scaleLinear()
          .domain([d3.min(series, stackMin), d3.max(series, stackMax)])
          .rangeRound([height - margin.bottom, margin.top]);

      var z = d3.scaleOrdinal(d3.schemeCategory10);

      var colors = ["#e51c23", "#ff9800", "#4caf50"]
 
      svg.append("g")
        .selectAll("g")
        .data(series)
        .enter().append("g")
          .attr("fill", function(d) { return z(d.key); })
          .style("fill", function(d,i) { return colors[i];})
        .selectAll("rect")
        .data(function(d) { return d; })
        .enter().append("rect")
          .attr("width", x.bandwidth)
          .attr("x", function(d) { return x(d.data.category); })
          .attr("y", function(d) { return y(d[1]); })
          .attr("height", function(d) { return y(d[0]) - y(d[1]); })
      console.log(svg)
      svg.append("g")
          .attr("transform", "translate(0," + y(0) + ")")
          .call(d3.axisBottom(x));

      svg.append("g")
          .attr("transform", "translate(" + margin.left + ",0)")
          .call(d3.axisLeft(y));
          

      function stackMin(serie) {
        return d3.min(serie, function(d) { return d[0]; });
      }

      function stackMax(serie) {
        return d3.max(serie, function(d) { return d[1]; });
      }
    });
  



